# Service Hub Announces a new resource about an artefact in the Data Pod
#
# This rulebook an example where a Announce is received from a ServiceHub
# in response to an Offer that was sent in some previous step. This
# Announce can be processed immediately in rule [1].
#
# This rulebook also contains an example what to do when a Announce is received
# without a previous Offer. In some way we need to have the maintainer decide
# what to do with this Announce. The maintainer sends an Accept or a Reject.
# In case of an Accept rule[3] is started where we ask to reprocess the
# first Announce (the Orchestrator "knows" it is accepted by the maintainer)
#
# See:
#   https://mellonscholarlycommunication.github.io/coar-usecases/mellon-scenario.html#service-hub-announces-a-new-resource-about-an-artefact-in-the-data-pod

PREFIX myself:        <https://pod.institution.org/reseacher/alice>
PREFIX as:            <https://www.w3.org/ns/activitystreams#>
PREFIX rdf:           <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX pol:           <https://www.example.org/ns/policy#>
PREFIX fno:           <https://w3id.org/function/ontology#>
PREFIX log:           <http://www.w3.org/2000/10/swap/log#>
PREFIX list:          <http://www.w3.org/2000/10/swap/list#>
PREFIX event:         <http://example.org/eventlog#>
PREFIX :              <http://example.org/#>

# [0] Check if we have cited as:inReplyTo formulas
{
  ?this as:inReplyTo ?reply .
  ?formula a event:Event .
  ?formula log:includes {
    ?reply a ?type.
  } .
}
=>
{
  ?this :eventLogMatch ?type.
}.

# [1] Service Hub Announce is a response to a previous Offer or Accept
{
  # An AS2 Announce was received...
  ?this a as:Announce .

  # ...in reply to a previous processed offer
  # OR
  # ...is known to be accepted by the maintainer
  ?this!:eventLogMatch list:in (as:Offer as:Accept).
}
=>
{
  # Append to the Artefact EventLog
  ?s pol:policy [
      a fno:Execution ;
      fno:executes pol:appendToLog ;
  ] .

  # Create a backlink
  ?this pol:policy [
      a fno:Execution ;
      fno:executes pol:addLink
  ] .
}.


# [2] Service Hub Announce is standalone (no previous Offer)
{
  # An AS2 Announce was received...
  ?this a as:Announce .

  # ...not in reply to a previous offer
  ?SCOPE log:notIncludes { ?this as:inReplyTo ?x }.
}
=>
{
  # Do nothing
}.


# [3] Maintainer sends an Accept to a previous stored announce
{

  # An AS2 Accept was received...
  ?this a as:Accept .

  # ...from myself
  ?this as:actor myself: .

  # ...in reply to a previous announce
  ?this!:eventLogMatch list:in (as:Announce).
}
=>
{
  # Send the accepted notification back to step [1]
  ?this pol:policy [
      a fno:Execution ;
      fno:executes pol:reprocessNotification ;
      pol:notification ?notification
  ] .
}.


# [4] Maintainer sends an Reject to a previous stored announce
{
  # An AS2 Accept was received...
  ?this a as:Reject .

  # ...from myself
  ?this as:actor myself: .

  # ...in reply to a previous announce
  ?this!:eventLogMatch list:in (as:Announce).
}
=>
{
  # Do nothing ...
}.
